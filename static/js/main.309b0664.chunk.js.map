{"version":3,"sources":["configurator.ts","components/game.tsx","App.js","reportWebVitals.js","index.js"],"names":["bulletsPerRow","Game","useState","board","setBoard","initBoard","arr","Array","length","i","fill","getBoard","useEffect","updatePlayer","row","lastRow","setPlayer2","isPlayer2","setLastRow","isGameFinished","every","x","map","y","className","j","onClick","console","log","_board","currentRow","msg","alert","toggleBullet","disabled","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAAaA,EAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,G,OCGhCC,EAAO,WAAO,IAAD,EACIC,mBAAc,MADlB,mBACfC,EADe,KACRC,EADQ,KAEhBC,EAAY,kBAAMD,EDHJ,WAEpB,IADA,IAAME,EAAMC,MAAMP,EAAcQ,QACxBC,EAAE,EAAGA,EAAEH,EAAIE,OAAQC,IACvBH,EAAIG,GAAM,IAAIF,MAAMP,EAAcS,IAAIC,MAAK,GAE/C,OAAOJ,ECF0BK,KACjCC,qBAAU,WACNP,MACC,IACL,IAcMQ,EAAe,SAACV,EAAYW,GACf,OAAZC,GAAoBA,IAAWD,GAC1BE,GAAYC,GAEpBC,EAAWJ,IAETK,EAAiB,SAAChB,GAAD,OAAuBA,EAAMiB,OAAM,SAACN,GAAD,OAAQA,EAAIM,OAAM,SAACC,GAAD,QAAgBA,SA1BtE,EA4BQnB,mBAAc,MA5BtB,mBA4Bfa,EA5Be,KA4BNG,EA5BM,OA6BUhB,oBAAkB,GA7B5B,mBA6Bfe,EA7Be,KA6BJD,EA7BI,KA8BtB,OAAO,gCACH,6BAAKC,EAAY,WAAa,aAC9B,qCAAMd,QAAN,IAAMA,OAAN,EAAMA,EAAOmB,KAAI,SAACC,EAAUd,GAAX,aACb,qBAAKe,UAAU,yCAAf,mBACKrB,EAAMM,UADX,aACK,EAAUa,KAAI,SAACD,EAAWI,GAAZ,OACX,wBAAQD,UAAS,qBAAgBH,EAAG,SAAS,GAA5B,YAAkCN,IAAYN,EAAG,UAAU,IAE5EiB,QAAS,kBA/BJ,SAACjB,EAASgB,GAC3BE,QAAQC,IAAInB,EAAEgB,GACd,IAAMI,EAAM,YAAO1B,GACb2B,EAAU,YAAO3B,EAAMM,IAK7B,GAJAqB,EAAWL,IAAMtB,EAAMM,GAAGgB,GAC1BI,EAAOpB,GAAKqB,EACZ1B,EAASyB,GACThB,EAAagB,EAAQpB,GAClBU,EAAeU,GAAQ,CACtB,IAAME,EAAG,UAAOd,EAAyB,WAAb,WAAnB,SACTe,MAAMD,GACN1B,KAoBsB4B,CAAaxB,EAAEgB,IAC7BS,SAAU/B,EAAMM,GAAGgB,IAFdA,OAHgDhB,YCzB1D0B,MARf,WACE,OACE,qBAAKX,UAAU,MAAf,SACE,cAAC,EAAD,OCMSY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.309b0664.chunk.js","sourcesContent":["export const bulletsPerRow = [3, 5, 6, 6, 5, 3]\r\n\r\nexport const getBoard = () => {\r\n    const arr = Array(bulletsPerRow.length);\r\n    for(let i=0; i<arr.length; i++){\r\n        arr[i] =  new Array(bulletsPerRow[i]).fill(false);\r\n    }\r\n    return arr;\r\n}","import { useEffect, useState } from \"react\";\r\nimport { bulletsPerRow, getBoard } from \"../configurator\"\r\n\r\nexport const Game = () => {\r\n    const [board, setBoard] = useState<any>(null);\r\n    const initBoard = () => setBoard(getBoard());\r\n    useEffect(() => {\r\n        initBoard();\r\n      }, []);\r\n    const toggleBullet = (i:number,j:number) =>{\r\n        console.log(i,j);\r\n        const _board = [...board];\r\n        const currentRow = [...board[i]]\r\n        currentRow[j] = !board[i][j];\r\n        _board[i] = currentRow;\r\n        setBoard(_board);\r\n        updatePlayer(_board, i);\r\n        if(isGameFinished(_board)){\r\n            const msg = `${!isPlayer2 ? 'Player 2' : 'Player 1'} Win!`\r\n            alert(msg);\r\n            initBoard();\r\n        }\r\n    }\r\n    const updatePlayer = (board: any, row: number) =>{\r\n        if(lastRow !== null && lastRow!== row){\r\n                setPlayer2(!isPlayer2);\r\n        }\r\n        setLastRow(row);\r\n    }\r\n    const isGameFinished = (board:boolean[][]) => board.every((row)=> row.every((x:boolean)=> !!x));\r\n\r\n    const [lastRow, setLastRow] = useState<any>(null);;\r\n    const [isPlayer2, setPlayer2] = useState<boolean>(false);\r\n    return <div>\r\n        <h1>{isPlayer2 ? 'Player 2' : 'Player 1'}</h1>\r\n        <div>{board?.map((y:number, i:number) => (\r\n            <div className=\"d-flex flex-row justify-content-center\" key={i}>\r\n                {board[i]?.map((x:boolean, j:number) =>\r\n                    <button className={`p-2 bullet ${x ?\"pushed\":\"\"} ${lastRow === i ?\"currRow\":\"\"}`} \r\n                    key={j}\r\n                    onClick={() =>toggleBullet(i,j)}\r\n                    disabled={board[i][j]}\r\n                    ></button>\r\n                )}\r\n            </div>\r\n        ))}\r\n        </div>\r\n\r\n    </div>\r\n}","import './App.css';\nimport { Game } from './components/game';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}